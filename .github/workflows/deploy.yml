name: Deploy Docs # 部署文档

on:
  # 手动运行工作流程（workflow_dispatch 事件触发器配置后可以在actions下手动运行工作流）
  workflow_dispatch:
  # 当推送到main分支时自动部署
  push:
    branches: [ main ]

jobs:
  build: # 构建任务
    runs-on: ubuntu-latest # 在Ubuntu最新版本上运行
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout # 检出代码
        uses: actions/checkout@v4
        with:
          # 根据网上资料查询此处可以设置为 false。https://github.com/actions/checkout
          persist-credentials: false

      - name: Install pnpm # 安装pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false # 不自动运行pnpm install

      - name: Setup Node # 设置Node.js环境
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version # 从文件读取node版本
          cache: 'pnpm' # 缓存pnpm依赖

      - name: Show Node version # 显示Node版本信息
        run: node --version && pnpm --version

      - name: Install dependencies # 安装依赖
        run: pnpm install

      - name: Build # 打包静态文件
        run: pnpm build:docs

      - name: Check build output # 检查构建输出
        run: |
          echo "Build output directory contents:"
          ls -la docs/.vitepress/dist/
          echo "Checking if index.html exists:"
          test -f docs/.vitepress/dist/index.html && echo "✅ index.html found" || echo "❌ index.html not found"

      # 部署到GitHub Pages - 也就是将打包内容发布到GitHub Pages
      - name: Deploy
        # 使用别人写好的 actions去部署（将打包文件部署到指定分支上）
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        # 自定义环境变量
        with:
          # 指定仓库：你要发布的仓库路径名
          repository-name: liu-yuren/pro-components
          # 部署到 gh-pages 分支，这是GitHub Pages的标准做法
          branch: gh-pages
          # 填写打包好的目录名称路径，本项目配置在根目录
          folder: docs/.vitepress/dist
