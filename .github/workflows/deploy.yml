name: Deploy Docs # 部署文档

on:
  # 手动运行工作流程（workflow_dispatch 事件触发器配置后可以在actions下手动运行工作流）
  workflow_dispatch:
  # 当推送到main分支时自动部署
  push:
    branches: [ main ]

# 设置GITHUB_TOKEN权限
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build: # 构建任务
    runs-on: ubuntu-latest # 在Ubuntu最新版本上运行
    steps:
      - name: Checkout # 检出代码
        uses: actions/checkout@v4

      - name: Install pnpm # 安装pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false # 不自动运行pnpm install

      - name: Setup Node # 设置Node.js环境
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version # 从文件读取node版本
          cache: 'pnpm' # 缓存pnpm依赖

      - name: Show Node version # 显示Node版本信息
        run: node --version && pnpm --version

      - name: Install dependencies # 安装依赖
        run: pnpm install

      - name: Build # 打包静态文件
        run: pnpm build:docs

      - name: Check build output # 检查构建输出
        run: |
          echo "Build output directory contents:"
          ls -la docs/.vitepress/dist/
          echo "Checking if index.html exists:"
          test -f docs/.vitepress/dist/index.html && echo "✅ index.html found" || echo "❌ index.html not found"

      - name: Setup Pages # 设置Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact # 上传构建产物
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  deploy: # 部署任务
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages # 部署到GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
